{"version":3,"sources":["Components/TodoForm.js","Components/Todo.js","Components/TodoList.js","App.tsx","index.tsx"],"names":["TodoForm","_ref","addTodo","_useState","useState","id","task","completed","_useState2","Object","slicedToArray","todo","setTodo","react_default","a","createElement","onSubmit","e","preventDefault","trim","objectSpread","uuidv4","style","display","name","type","value","onChange","target","placeholder","className","index_esm","color","Todo","toggleComplete","removeTodo","backgroundColor","onClick","textDecoration","Button","variant","TodoList","todos","map","Todo_Todo","key","App","setTodos","Container","Components_TodoForm","concat","toConsumableArray","TodoList_TodoList","filter","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.d24aa06d.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { FaPlus } from \"react-icons/fa\";\r\n\r\n\r\n\r\nconst TodoForm = ({addTodo}) => {\r\n    const [todo, setTodo] = useState({\r\n        id:\"\",\r\n        task:\"\",\r\n        completed: false\r\n    });\r\n    function handleTaskInputChange(e) {\r\n        setTodo({...todo, task:e.target.value});\r\n    }\r\n    function handleSubmit(e){\r\n        e.preventDefault();\r\n        if(todo.task.trim()) {\r\n            addTodo({...todo,id: uuidv4()});\r\n            //reset input\r\n            setTodo({...todo, task: \"\"});\r\n        }\r\n\r\n    }\r\n    return (\r\n    <form onSubmit={handleSubmit} style={{display:\"flex\"}} >\r\n        <input\r\n        name='task'\r\n        type='text'\r\n        value={todo.task} \r\n        onChange={handleTaskInputChange}\r\n        placeholder='Add todo'\r\n        className='task'\r\n        />\r\n        <button \r\n        type='submit'\r\n        className='button'\r\n        ><FaPlus style={{display: \"flex\", color: \"white\"}}/></button>\r\n    </form>\r\n    )\r\n}\r\n\r\nexport default TodoForm;\r\n","import React from 'react'\r\nimport { Button } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nconst Todo = ({todo, toggleComplete, removeTodo}) => {\r\n    function handleCheckboxClick() {\r\n        toggleComplete(todo.id);\r\n    }\r\n    function handleRemoveClick(){\r\n        removeTodo(todo.id)\r\n    };\r\n  return (\r\n    <div className='li-align mt-3'\r\n    style={{\r\n      backgroundColor: todo.completed ? \"rgb(71, 239, 160)\"  :null\r\n    }}\r\n    >\r\n    <input \r\n    type=\"checkbox\" \r\n    onClick={handleCheckboxClick}\r\n    />\r\n    <div className='li-display'>\r\n    <li style={{\r\n        textDecoration: todo.completed ? \"line-through\"  :null\r\n\r\n    }}>{todo.task}</li>\r\n    </div>\r\n\r\n    <Button variant='danger' onClick={handleRemoveClick}>X</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {Todo};","import React from 'react'\r\nimport { Todo } from './Todo';\r\n\r\nconst TodoList = ({todos, toggleComplete, removeTodo}) => {\r\n  return (\r\n      <div className='task-container'>\r\n          <h3 className='bold mb-4'>Tasks</h3>\r\n      <ul className='ul-task task'>\r\n          {todos.map(todo =>(\r\n              <Todo \r\n              key={todo.id} \r\n              todo={todo} \r\n              toggleComplete={toggleComplete} \r\n              removeTodo={removeTodo}\r\n              />\r\n          ))}\r\n      </ul>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport {TodoList};","import \"./App.css\";\r\nimport React, { useState } from \"react\";\r\nimport TodoForm from \"./Components/TodoForm\";\r\nimport { TodoList } from \"./Components/TodoList\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nexport interface ITodoObj {\r\n  id: string;\r\n  task: string;\r\n  completed: boolean;\r\n}\r\n\r\nexport interface ITodoObj {\r\n  id: string;\r\n  task: string;\r\n  completed: boolean;\r\n  name: string;\r\n  price: number;\r\n}\r\nexport interface AddTodo {\r\n  addTodo: (todo: ITodoObj) => void;\r\n}\r\nexport type TodoArray = {\r\n  id: string;\r\n  name: string;\r\n  price: number;\r\n  completed: boolean;\r\n}[];\r\n\r\nfunction App() {\r\n  const [todos, setTodos] = useState<TodoArray>([]);\r\n\r\n  function addTodo(todo: ITodoObj) {\r\n    setTodos([todo, ...todos]);\r\n  }\r\n  function toggleComplete(id: string) {\r\n    setTodos(\r\n      todos.map((todo) => {\r\n        if (todo.id === id) {\r\n          return {\r\n            ...todo,\r\n            completed: !todo.completed,\r\n          };\r\n        }\r\n        return todo;\r\n      })\r\n    );\r\n  }\r\n  function removeTodo(id: string) {\r\n    setTodos(todos.filter((todo) => todo.id !== id));\r\n  }\r\n  return (\r\n    <div>\r\n      <div className='App bg-work row gx-0'>\r\n        <Container className='col-md-6 col-lg-7'>\r\n          <header className='App-header'>\r\n            <h2 className='mb-4 text-dark bold'>Todo-App</h2>\r\n            <TodoForm addTodo={addTodo} />\r\n          </header>\r\n        </Container>\r\n        <Container className='col-md-6 col-lg-5'>\r\n          <TodoList\r\n            todos={todos}\r\n            toggleComplete={toggleComplete}\r\n            removeTodo={removeTodo}\r\n          />\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\")!);\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}